<?xml version="1.0" encoding="utf-8"?>

<!--
	Copyright ©2002-2013 Daniel Bullington (dpbullington@gmail.com)
	Distributed under the MIT license: http://www.opensource.org/licenses/mit-license.php
-->
<Template xmlns="http://www.textmetal.com/api/v4.4.0">

	<Alloc token="test" />
	
	<Assign token="test">
		<Assign.Expression>
			<Value data="1234.56789" type="System.Double" />
		</Assign.Expression>
	</Assign>

	<Write newline="true">
		<Write.Text>
			<Value data="${test}" type="System.String" />
		</Write.Text>
	</Write>
	
	<Assign token="test">
		<Assign.Expression>
			<UnaryExpression operator="Neg">
				<UnaryExpression.TheExpression>
					<Facet name="test" />
				</UnaryExpression.TheExpression>
			</UnaryExpression>			
		</Assign.Expression>
	</Assign>

	<Include name="bob_include_content.txt" />
	
	<Alias local-name="Scrizzle" namespace-uri="http://www.textmetal.com/api/v4.4.0" aqt-name="TextMetal.Framework.TemplateModel.WriteConstruct, TextMetal.Framework.TemplateModel" />

	<Import name="bob_import_template.xml" />
	
	<![CDATA[
	
	${ToolVersion}
	
	]]>
	
	<If>
		<If.Condition>
			<BinaryExpression operator="And">
				<BinaryExpression.LeftExpression>
					<Value type="System.Boolean" data="false" />
				</BinaryExpression.LeftExpression>
				<BinaryExpression.RightExpression>
					<Value type="System.Boolean" data="true" />
				</BinaryExpression.RightExpression>
			</BinaryExpression>
		</If.Condition>
		<If.True>
<![CDATA[TRUE]]>
		</If.True>
		<If.False>
<![CDATA[FALSE]]>
		</If.False>
	</If>
	
	<Assign token="test">
		<Assign.Expression>
			<PowerShell>
				<Script>										
					$x = $__tm__.Get("test");
					return $x
				</Script>
			</PowerShell>			
		</Assign.Expression>
	</Assign>
	
	<![CDATA[	
${test}
*ps1*	
]]>
	
	
	<Assign token="test">
		<Assign.Expression>
			<Ruby>
				<Script>
					puts "test ruby"
					x = __tm__.Get("test");
					y = 100 * -1
					return x;
				</Script>
			</Ruby>			
		</Assign.Expression>
	</Assign>
	
	<![CDATA[	
${test}
*rb*	
]]>
		
	<Assign token="test">
		<Assign.Expression>
			<UnaryExpression operator="Incr">
				<UnaryExpression.TheExpression>
					<Value data="100" type="System.Byte" />
				</UnaryExpression.TheExpression>
			</UnaryExpression>	
		</Assign.Expression>
	</Assign>
	
	<![CDATA[	
${test}
***	
]]>

	<Free token="test" />
</Template>
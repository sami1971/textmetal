<?xml version="1.0" encoding="utf-8"?>

<!--
	Copyright ©2002-2011 Daniel Bullington (dpbullington@gmail.com)
	Distributed under the MIT license: http://www.opensource.org/licenses/mit-license.php
-->
<Template xmlns="http://code.google.com/p/textmetal/rev3">
	<Alloc token="FolderName" />

	<ForEach in="Schemas" var-ct="#LoopCount" var-ix="#LoopIndex">
		<ForEach.Filter></ForEach.Filter>
		<ForEach.Body>

			<ForEach in="Tables" var-ct="#LoopCount" var-ix="#LoopIndex">
				<ForEach.Filter></ForEach.Filter>
				<ForEach.Body>

					<If>
						<If.Condition>
							<UnaryExpression operator="Not">
								<UnaryExpression.TheExpression>
									<Facet name="IsView" />
								</UnaryExpression.TheExpression>
							</UnaryExpression>
						</If.Condition>
						<If.True>
							<Assign token="FolderName">
								<Assign.Expression>
									<Value data="Tables" />
								</Assign.Expression>
							</Assign>
						</If.True>
					</If>

					<If>
						<If.Condition>
							<Facet name="IsView" />
						</If.Condition>
						<If.True>
							<Assign token="FolderName">
								<Assign.Expression>
									<Value data="Views" />
								</Assign.Expression>
							</Assign>
						</If.True>
					</If>

					<OutputScope name="${ClrNamespace}.UnitTests\${FolderName}\${TableNameSingularPascalCase}_QueryTests.g.cs">
						<Include name="include_gen_cprt_message.cs.txt" />
<![CDATA[

using System;

using NUnit.Framework;

using TextMetal.Core.UnitTests.TestingFramework;
]]>
						<If>
							<If.Condition>
								<UnaryExpression operator="IsDef">
									<UnaryExpression.TheExpression>
										<Aspect name="ClrUsingNamespaces" />
									</UnaryExpression.TheExpression>
								</UnaryExpression>
							</If.Condition>
							<If.True>
								<ForEach in="ClrUsingNamespaces" var-ct="#LoopCount" var-ix="#LoopIndex" var-item="#item">
									<ForEach.Body>
										<![CDATA[using ${#item};
]]>
									</ForEach.Body>
								</ForEach>
							</If.True>
						</If>
						<![CDATA[
using ${ClrNamespace}.${FolderName};

namespace ${ClrNamespace}.UnitTests.${FolderName}
{
	[TestFixture]
	public sealed class ${TableNameSingularPascalCase}_QueryTests
	{		
		#region Constructors/Destructors
		
		public ${TableNameSingularPascalCase}_QueryTests()
		{
		}
		
		#endregion
		
		#region Methods/Operators
		
		[Test]
		public void ShouldCreate${TableNameSingularPascalCase}_QueryTest()
		{			
			${TableNameSingularPascalCase}_Query ${TableNameSingularCamelCase}Query;
			
			${TableNameSingularCamelCase}Query = new ${TableNameSingularPascalCase}_Query();

]]>

						<ForEach in="Columns" var-ct="#LoopCount" var-ix="#LoopIndex">
							<ForEach.Filter>
								<BinaryExpression operator="Or">
									<BinaryExpression.LeftExpression>
										<BinaryExpression operator="Ne">
											<BinaryExpression.LeftExpression>
												<Facet name="ColumnIsPrimaryKey" />
											</BinaryExpression.LeftExpression>
											<BinaryExpression.RightExpression>
												<Value type="System.Boolean" data="True" />
											</BinaryExpression.RightExpression>
										</BinaryExpression>
									</BinaryExpression.LeftExpression>
									<BinaryExpression.RightExpression>
										<BinaryExpression operator="Eq">
											<BinaryExpression.LeftExpression>
												<Facet name="IsView" />
											</BinaryExpression.LeftExpression>
											<BinaryExpression.RightExpression>
												<Value type="System.Boolean" data="True" />
											</BinaryExpression.RightExpression>
										</BinaryExpression>
									</BinaryExpression.RightExpression>
								</BinaryExpression>
							</ForEach.Filter>
							<ForEach.Body>

								<![CDATA[			${TableNameSingularCamelCase}Query.@SortAscending${ColumnNamePascalCase} = ((ValueGenerator.GetNextValue<int>() % 2) == 0);
			Assert.AreEqual(((ValueGenerator.GetPreviousValue<int>() % 2) == 0), ${TableNameSingularCamelCase}Query.@SortAscending${ColumnNamePascalCase});
]]>

								<If>
									<If.Condition>
										<BinaryExpression operator="Ne">
											<BinaryExpression.LeftExpression>
												<Facet name="#LoopCount" />
											</BinaryExpression.LeftExpression>
											<BinaryExpression.RightExpression>
												<Facet name="#LoopIndex" />
											</BinaryExpression.RightExpression>
										</BinaryExpression>
									</If.Condition>
									<If.True>
										<![CDATA[
]]>
									</If.True>
								</If>
							</ForEach.Body>
						</ForEach>

						<![CDATA[		}
		
		#endregion
	}
}
]]>
					</OutputScope>
				</ForEach.Body>
			</ForEach>

		</ForEach.Body>
	</ForEach>

</Template>
<?xml version="1.0" encoding="utf-8"?>

<!--
	Copyright ©2002-2012 Daniel Bullington (dpbullington@gmail.com)
	Distributed under the MIT license: http://www.opensource.org/licenses/mit-license.php
-->
<Template xmlns="http://www.textmetal.com/api/v4.4.0">

	<OutputScope name="${ClrNamespace}\DatabaseRevision.g.cs">
		<Include name="include_gen_cprt_message.cs.txt" />
<![CDATA[

using System;
using System.Collections.Generic;
using System.Xml.Serialization;

using TextMetal.Core;
using TextMetal.Plumbing.CommonFacilities;
]]>
		<If>
			<If.Condition>
				<UnaryExpression operator="IsDef">
					<UnaryExpression.TheExpression>
						<Aspect name="ClrUsingNamespaces" />
					</UnaryExpression.TheExpression>
				</UnaryExpression>
			</If.Condition>
			<If.True>
				<ForEach in="ClrUsingNamespaces" var-ct="#LoopCount" var-ix="#LoopIndex" var-item="#item">
					<ForEach.Body>
						<![CDATA[using ${#item};
]]>
					</ForEach.Body>
				</ForEach>
			</If.True>
		</If>
		<![CDATA[
namespace ${ClrNamespace}
{
	/// <summary>
	/// 	Represents a single historical revsion to a database (file).
	/// </summary>
	[Serializable]
	public partial class DatabaseRevision
	{
		#region Constructors/Destructors

		/// <summary>
		/// 	Initializes a new instance of the DatabaseRevision class.
		/// </summary>
		public DatabaseRevision()
		{
		}

		#endregion

		#region Fields/Constants

		private readonly List<string> statements = new List<string>();
		private int number;

		#endregion

		#region Properties/Indexers/Events

		/// <summary>
		/// 	Gets or sets the revision number.
		/// </summary>
		[XmlAttribute("number")]
		public int Number
		{
			get
			{
				return this.number;
			}
			set
			{
				this.number = value;
			}
		}

		/// <summary>
		/// 	Gets an ordered list of statements to execute for this revision.
		/// </summary>
		[XmlArray(ElementName = "Statements")]
		[XmlArrayItem(ElementName = "Statement")]
		public List<string> Statements
		{
			get
			{
				return this.statements;
			}
		}

		#endregion
	}
}
]]>
	</OutputScope>

</Template>
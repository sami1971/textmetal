//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by:
// TextMetal 4.4.5.2714;
// 		Copyright ©2002-2012 Daniel Bullington (dpbullington@gmail.com)
//		Distributed under the MIT license: http://www.opensource.org/licenses/mit-license.php
//		Project URL: https://github.com/dpbullington/textmetal
//
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//
// </auto-generated>
//------------------------------------------------------------------------------

/*
	Copyright ©2002-2012 Daniel Bullington (dpbullington@gmail.com)
	Distributed under the MIT license: http://www.opensource.org/licenses/mit-license.php
*/

using System;

using NUnit.Framework;

using TestingFramework.Core.Customization;

using TextMetal.WebHostSample.Objects.Model.Tables;

namespace TextMetal.WebHostSample.Objects.Model.UnitTests.Tables
{
	[TestFixture]
	public sealed class EmailMessageTests
	{		
		#region Constructors/Destructors
		
		public EmailMessageTests()
		{
		}
		
		#endregion
		
		#region Methods/Operators
		
		[Test]
		public void ShouldCreateEmailMessageTest()
		{			
			EmailMessage emailMessage;
			
			emailMessage = new EmailMessage();

			emailMessage.@EmailMessageId = ValueGenerator.GetNextValue<Int32>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<Int32>(), emailMessage.@EmailMessageId);

			emailMessage.@From = ValueGenerator.GetNextValue<String>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<String>(), emailMessage.@From);

			emailMessage.@Sender = ValueGenerator.GetNextValue<String>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<String>(), emailMessage.@Sender);

			emailMessage.@ReplyTo = ValueGenerator.GetNextValue<String>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<String>(), emailMessage.@ReplyTo);

			emailMessage.@To = ValueGenerator.GetNextValue<String>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<String>(), emailMessage.@To);

			emailMessage.@Cc = ValueGenerator.GetNextValue<String>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<String>(), emailMessage.@Cc);

			emailMessage.@Bcc = ValueGenerator.GetNextValue<String>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<String>(), emailMessage.@Bcc);

			emailMessage.@Subject = ValueGenerator.GetNextValue<String>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<String>(), emailMessage.@Subject);

			emailMessage.@IsBodyHtml = ValueGenerator.GetNextValue<Boolean>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<Boolean>(), emailMessage.@IsBodyHtml);

			emailMessage.@Body = ValueGenerator.GetNextValue<String>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<String>(), emailMessage.@Body);

			emailMessage.@Processed = ValueGenerator.GetNextValue<Boolean>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<Boolean>(), emailMessage.@Processed);

			emailMessage.@CreationTimestamp = ValueGenerator.GetNextValue<DateTime>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<DateTime>(), emailMessage.@CreationTimestamp);

			emailMessage.@ModificationTimestamp = ValueGenerator.GetNextValue<DateTime>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<DateTime>(), emailMessage.@ModificationTimestamp);

			emailMessage.@LogicalDelete = ValueGenerator.GetNextValue<Boolean>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<Boolean>(), emailMessage.@LogicalDelete);
		}
		
		#endregion
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by:
// TextMetal 4.4.5.2714;
// 		Copyright ©2002-2012 Daniel Bullington (dpbullington@gmail.com)
//		Distributed under the MIT license: http://www.opensource.org/licenses/mit-license.php
//		Project URL: https://github.com/dpbullington/textmetal
//
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//
// </auto-generated>
//------------------------------------------------------------------------------

/*
	Copyright ©2002-2012 Daniel Bullington (dpbullington@gmail.com)
	Distributed under the MIT license: http://www.opensource.org/licenses/mit-license.php
*/

using System;

using NUnit.Framework;

using TestingFramework.Core.Customization;

using TextMetal.WebHostSample.Objects.Model.Tables;

namespace TextMetal.WebHostSample.Objects.Model.UnitTests.Tables
{
	[TestFixture]
	public sealed class EmailAttachmentTests
	{		
		#region Constructors/Destructors
		
		public EmailAttachmentTests()
		{
		}
		
		#endregion
		
		#region Methods/Operators
		
		[Test]
		public void ShouldCreateEmailAttachmentTest()
		{			
			EmailAttachment emailAttachment;
			
			emailAttachment = new EmailAttachment();

			emailAttachment.@EmailAttachmentId = ValueGenerator.GetNextValue<Int32>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<Int32>(), emailAttachment.@EmailAttachmentId);

			emailAttachment.@EmailMessageId = ValueGenerator.GetNextValue<Int32>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<Int32>(), emailAttachment.@EmailMessageId);

			emailAttachment.@MimeType = ValueGenerator.GetNextValue<String>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<String>(), emailAttachment.@MimeType);

			emailAttachment.@AttachmentBits = ValueGenerator.GetNextValue<Byte[]>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<Byte[]>(), emailAttachment.@AttachmentBits);

			emailAttachment.@CreationTimestamp = ValueGenerator.GetNextValue<DateTime>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<DateTime>(), emailAttachment.@CreationTimestamp);

			emailAttachment.@ModificationTimestamp = ValueGenerator.GetNextValue<DateTime>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<DateTime>(), emailAttachment.@ModificationTimestamp);

			emailAttachment.@LogicalDelete = ValueGenerator.GetNextValue<Boolean>();
			Assert.AreEqual(ValueGenerator.GetPreviousValue<Boolean>(), emailAttachment.@LogicalDelete);
		}
		
		#endregion
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by:
// TextMetal 4.3.0.27741;
// 		Copyright ©2002-2012 Daniel Bullington (dpbullington@gmail.com)
//		Distributed under the MIT license: http://www.opensource.org/licenses/mit-license.php
//		Project URL: http://code.google.com/p/textmetal/
//
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//
// </auto-generated>
//------------------------------------------------------------------------------

/*
	Copyright ©2002-2012 Daniel Bullington (dpbullington@gmail.com)
	Distributed under the MIT license: http://www.opensource.org/licenses/mit-license.php
*/

using System;
using System.Collections.Generic;

using TextMetal.Core.Plumbing;

using TextMetal.WebHostSample.Objects.Model.Tables;

namespace TextMetal.WebHostSample.Objects.Model
{
	public partial interface IRepository
	{		
		#region Methods/Operators
		
		EmailAttachment LoadEmailAttachment(Int32 emailAttachmentId);

		EmailAttachment LoadEmailAttachment(UnitOfWorkContext unitOfWorkContext, Int32 emailAttachmentId);
						
		IList<EmailAttachment> FindEmailAttachments(EmailAttachment_Query emailAttachmentQuery);
		
		IList<EmailAttachment> FindEmailAttachments(UnitOfWorkContext unitOfWorkContext, EmailAttachment_Query emailAttachmentQuery);
		
		bool SaveEmailAttachment(EmailAttachment emailAttachment);
		
		bool SaveEmailAttachment(UnitOfWorkContext unitOfWorkContext, EmailAttachment emailAttachment);
		
		bool DiscardEmailAttachment(EmailAttachment emailAttachment);
		
		bool DiscardEmailAttachment(UnitOfWorkContext unitOfWorkContext, EmailAttachment emailAttachment);

		EventLog LoadEventLog(Int32 eventLogId);

		EventLog LoadEventLog(UnitOfWorkContext unitOfWorkContext, Int32 eventLogId);
						
		IList<EventLog> FindEventLogs(EventLog_Query eventLogQuery);
		
		IList<EventLog> FindEventLogs(UnitOfWorkContext unitOfWorkContext, EventLog_Query eventLogQuery);
		
		bool SaveEventLog(EventLog eventLog);
		
		bool SaveEventLog(UnitOfWorkContext unitOfWorkContext, EventLog eventLog);
		
		bool DiscardEventLog(EventLog eventLog);
		
		bool DiscardEventLog(UnitOfWorkContext unitOfWorkContext, EventLog eventLog);

		EmailMessage LoadEmailMessage(Int32 emailMessageId);

		EmailMessage LoadEmailMessage(UnitOfWorkContext unitOfWorkContext, Int32 emailMessageId);
						
		IList<EmailMessage> FindEmailMessages(EmailMessage_Query emailMessageQuery);
		
		IList<EmailMessage> FindEmailMessages(UnitOfWorkContext unitOfWorkContext, EmailMessage_Query emailMessageQuery);
		
		bool SaveEmailMessage(EmailMessage emailMessage);
		
		bool SaveEmailMessage(UnitOfWorkContext unitOfWorkContext, EmailMessage emailMessage);
		
		bool DiscardEmailMessage(EmailMessage emailMessage);
		
		bool DiscardEmailMessage(UnitOfWorkContext unitOfWorkContext, EmailMessage emailMessage);

		#endregion
	}
}
